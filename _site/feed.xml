<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2024-04-03T02:43:12-05:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">404 not found</title><subtitle>안선생님.. 코딩이 하고싶어요...!
</subtitle><author><name>SangJeong Yoon</name></author><entry><title type="html">9095</title><link href="http://0.0.0.0:4000/1149.html" rel="alternate" type="text/html" title="9095" /><published>2024-04-02T00:00:00-05:00</published><updated>2024-04-02T00:00:00-05:00</updated><id>http://0.0.0.0:4000/1149</id><content type="html" xml:base="http://0.0.0.0:4000/1149.html">&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1149&quot;&gt;문제&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;그리 어렵지 않다!&lt;/p&gt;

&lt;p&gt;(n) 번째 집은 (n - 1)번째랑 다르게 칠해야 하니&lt;/p&gt;

&lt;p&gt;n에 R을 칠하는 경우는 (n - 1)에 G, B를 칠한 경우 중 작은 값을 가져오면 된다&lt;/p&gt;

&lt;p&gt;나머지는 동일!&lt;/p&gt;

&lt;hr data-content=&quot; 코드 &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;bits/stdc++.h&amp;gt;

using namespace std;

int N;
int stair[302];

int dp[3][302];


int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	string tmp;
	getline(cin, tmp);
	N = stoi(tmp);

	for (int i = 1; i &amp;lt;= N; i++) {
		getline(cin, tmp);
		stair[i] = stoi(tmp); 
	}

	dp[1][1] = stair[1]; dp[2][1] = 0;
	dp[1][2] = stair[2]; dp[2][2] = stair[1] + stair[2];

	for (int i = 3; i &amp;lt;= N; i++) {
		dp[1][i] = max(dp[1][i - 2], dp[2][i - 2]) + stair[i];
		dp[2][i] = dp[1][i - 1] + stair[i];
	}

	cout &amp;lt;&amp;lt; max(dp[1][N], dp[2][N]) &amp;lt;&amp;lt; &quot;\n&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>SangJeong Yoon</name></author><category term="probs" /><summary type="html">문제</summary></entry><entry><title type="html">9095</title><link href="http://0.0.0.0:4000/9095.html" rel="alternate" type="text/html" title="9095" /><published>2024-04-02T00:00:00-05:00</published><updated>2024-04-02T00:00:00-05:00</updated><id>http://0.0.0.0:4000/9095</id><content type="html" xml:base="http://0.0.0.0:4000/9095.html">&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9095&quot;&gt;문제&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;11&lt;/strong&gt;보다 작은 자연수만 구하면 되므로 그리디를 사용해도 될 것 같다&lt;/p&gt;

&lt;p&gt;그래도 dp로 풀어보면&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;까지는 쉬우니까 저장해놓고&lt;/li&gt;
  &lt;li&gt;(n &amp;gt; 4) 번째 부터는 n - 3, n - 2, n - 1 다 더하면 된다!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;쉽다!&lt;/p&gt;

&lt;hr data-content=&quot; 코드 &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;bits/stdc++.h&amp;gt;

using namespace std;

int N;

void func() {

	int *dp = new int[15];
	string tmp;
	getline(cin, tmp);

	int n = stoi(tmp);

	dp[0] = 0; dp[1] = 1; dp[2] = 2; dp[3] = 4;
	for (size_t i = 4; i &amp;lt;= n; i++)
		dp[i] = dp[i - 3] + dp[i - 2] + dp[i - 1]; 

	cout &amp;lt;&amp;lt; dp[n] &amp;lt;&amp;lt; &quot;\n&quot;;
	delete [] dp;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	string tmp;
	getline(cin, tmp);
	N = stoi(tmp);

	while (N--)
		func();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>SangJeong Yoon</name></author><category term="probs" /><summary type="html">문제</summary></entry><entry><title type="html">9095</title><link href="http://0.0.0.0:4000/2579.html" rel="alternate" type="text/html" title="9095" /><published>2024-04-02T00:00:00-05:00</published><updated>2024-04-02T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2579</id><content type="html" xml:base="http://0.0.0.0:4000/2579.html">&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2579&quot;&gt;문제&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;연속으로 계단 3개를 밟으면 안되는 조건이 좀 까다롭다!&lt;/p&gt;

&lt;p&gt;이전까지 몇개 밟았는지를 따로 저장하면 되지 않을까 &amp;gt; 맞다!&lt;/p&gt;

&lt;p&gt;dp[n], n은 연속으로 밟은 계단 수&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dp[2]는 연속으로 두개 밟아야 하니까 max 사용하지 않아도 된다&lt;/strong&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 코드 &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;bits/stdc++.h&amp;gt;

using namespace std;

int N;
int stair[302];

int dp[3][302];


int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	string tmp;
	getline(cin, tmp);
	N = stoi(tmp);

	for (int i = 1; i &amp;lt;= N; i++) {
		getline(cin, tmp);
		stair[i] = stoi(tmp); 
	}

	dp[1][1] = stair[1]; dp[2][1] = 0;
	dp[1][2] = stair[2]; dp[2][2] = stair[1] + stair[2];

	for (int i = 3; i &amp;lt;= N; i++) {
		dp[1][i] = max(dp[1][i - 2], dp[2][i - 2]) + stair[i];
		dp[2][i] = dp[1][i - 1] + stair[i];
	}

	cout &amp;lt;&amp;lt; max(dp[1][N], dp[2][N]) &amp;lt;&amp;lt; &quot;\n&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>SangJeong Yoon</name></author><category term="probs" /><summary type="html">문제</summary></entry><entry><title type="html">dynamic programming</title><link href="http://0.0.0.0:4000/dp1.html" rel="alternate" type="text/html" title="dynamic programming" /><published>2024-04-02T00:00:00-05:00</published><updated>2024-04-02T00:00:00-05:00</updated><id>http://0.0.0.0:4000/dp1</id><content type="html" xml:base="http://0.0.0.0:4000/dp1.html">&lt;hr data-content=&quot; 개념 &quot; /&gt;

&lt;p&gt;분할정복의 한 종류
단순 분할 정복은 &lt;strong&gt;이미 정복한 문제를 다시 정복한다는 점&lt;/strong&gt;에서 비효율 발생&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;한 문제가 작은 단위로 쪼개질 수 있을 때&lt;/li&gt;
  &lt;li&gt;작은 문제의 해가 그것을 포함하는 큰 문제의 해와 동일할 때&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;적용한다면, 단순 분할정복의 비효율을 줄일 수 있음&lt;/p&gt;

&lt;p&gt;단순히 생각하면 구한 것을 저장해놓고, 다음에 사용하면 된다!&lt;/p&gt;

&lt;hr data-content=&quot; 문제 &quot; /&gt;

&lt;p&gt;&lt;a href=&quot;9095.html&quot;&gt;백준 9095&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;2579.html&quot;&gt;백준 2579&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;1149.html&quot;&gt;백준 1149&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 주석 &quot; /&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ex) 피보나치 수열 구하기: N 을 구할 때, (n-1), (n-2)를 여러번 구해야하는 경우 생긴다. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>SangJeong Yoon</name></author><category term="algorithm" /><summary type="html"></summary></entry><entry><title type="html">irc 서버 만들기</title><link href="http://0.0.0.0:4000/make-ircserver.html" rel="alternate" type="text/html" title="irc 서버 만들기" /><published>2024-03-31T00:00:00-05:00</published><updated>2024-03-31T00:00:00-05:00</updated><id>http://0.0.0.0:4000/make%20ircserver!</id><content type="html" xml:base="http://0.0.0.0:4000/make-ircserver.html">&lt;p&gt;&lt;a href=&quot;https://github.com/sayoon-mandarine/irc&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-181717?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot;회고록&quot; /&gt;

&lt;h3 id=&quot;어려웠던-점&quot;&gt;어려웠던 점&lt;/h3&gt;

&lt;h3 id=&quot;배웠던-것들&quot;&gt;배웠던 것들&lt;/h3&gt;

&lt;p&gt;참고자료:&lt;/p&gt;</content><author><name>SangJeong Yoon</name></author><category term="toy" /><summary type="html"></summary></entry><entry><title type="html">Wolfenstein!</title><link href="http://0.0.0.0:4000/cub3d.html" rel="alternate" type="text/html" title="Wolfenstein!" /><published>2024-01-15T00:00:00-06:00</published><updated>2024-01-15T00:00:00-06:00</updated><id>http://0.0.0.0:4000/cub3D</id><content type="html" xml:base="http://0.0.0.0:4000/cub3d.html">&lt;p&gt;&lt;a href=&quot;https://github.com/sayoon-mandarine/cub3d&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-181717?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot;회고록&quot; /&gt;

&lt;h3 id=&quot;어려웠던-점&quot;&gt;어려웠던 점&lt;/h3&gt;

&lt;h3 id=&quot;배웠던-것들&quot;&gt;배웠던 것들&lt;/h3&gt;

&lt;p&gt;참고자료:&lt;/p&gt;</content><author><name>SangJeong Yoon</name></author><category term="toy" /><summary type="html"></summary></entry><entry><title type="html">minishell!</title><link href="http://0.0.0.0:4000/minishell.html" rel="alternate" type="text/html" title="minishell!" /><published>2023-12-11T00:00:00-06:00</published><updated>2023-12-11T00:00:00-06:00</updated><id>http://0.0.0.0:4000/minishell</id><content type="html" xml:base="http://0.0.0.0:4000/minishell.html">&lt;p&gt;&lt;a href=&quot;https://github.com/sayoon-mandarine/micorshell&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-181717?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot;회고록&quot; /&gt;

&lt;h3 id=&quot;어려웠던-점&quot;&gt;어려웠던 점&lt;/h3&gt;

&lt;h3 id=&quot;배웠던-것들&quot;&gt;배웠던 것들&lt;/h3&gt;

&lt;p&gt;참고자료:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://80000coding.oopy.io/9e88ba5f-4c38-44b2-9ddd-c1626c6b4dc4&quot;&gt;POSIX shell manual 번역&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://casterian.net/algo/bnf.html&quot;&gt;BNF와 재귀하향파서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>SangJeong Yoon</name></author><category term="toy" /><summary type="html"></summary></entry><entry><title type="html">about me</title><link href="http://0.0.0.0:4000/about-me.html" rel="alternate" type="text/html" title="about me" /><published>1996-01-25T00:00:00-06:00</published><updated>1996-01-25T00:00:00-06:00</updated><id>http://0.0.0.0:4000/about_me</id><content type="html" xml:base="http://0.0.0.0:4000/about-me.html">&lt;h4 id=&quot;응애애오&quot;&gt;응애애오..&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://i.namu.wiki/i/63-52Jo41_ag6_gN8BB-pPuNHQl_S9kLf4aizZKi_W8CmRaDfOecV4wV7gobI35Y9ImsW53EKmGDhr6Dl6fV494dd5UIVp8Q0zcKuhIImnzWUDHIT7aMLgjDgd1b_835x5FKtpWubR6FxRgYJtUdDg.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>SangJeong Yoon</name></author><summary type="html">응애애오..</summary></entry></feed>